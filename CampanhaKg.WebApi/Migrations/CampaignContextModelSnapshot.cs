// <auto-generated />
using System;
using CampanhaKg.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CampanhaKg.WebApi.Migrations
{
    [DbContext(typeof(CampaignContext))]
    partial class CampaignContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CampanhaKg.Domain.models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Numero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Rua")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CampanhaKg.Domain.models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FraternityId")
                        .HasColumnType("int");

                    b.Property<int?>("FraternityId1")
                        .HasColumnType("int");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Region")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street01")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street010")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street011")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street012")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street013")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street014")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street015")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street02")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street03")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street04")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street05")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street06")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street07")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street08")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street09")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("FraternityId");

                    b.HasIndex("FraternityId1");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("CampanhaKg.Domain.models.Fraternity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("VoluntaryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("VoluntaryId");

                    b.ToTable("Fraternities");
                });

            modelBuilder.Entity("CampanhaKg.Domain.models.Voluntary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contato")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("CampanhaKg.Domain.models.Campaign", b =>
                {
                    b.HasOne("CampanhaKg.Domain.models.Fraternity", "Fraternity")
                        .WithMany()
                        .HasForeignKey("FraternityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampanhaKg.Domain.models.Fraternity", null)
                        .WithMany("Locations")
                        .HasForeignKey("FraternityId1");
                });

            modelBuilder.Entity("CampanhaKg.Domain.models.Fraternity", b =>
                {
                    b.HasOne("CampanhaKg.Domain.models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampanhaKg.Domain.models.Voluntary", "Voluntary")
                        .WithMany()
                        .HasForeignKey("VoluntaryId");
                });
#pragma warning restore 612, 618
        }
    }
}
